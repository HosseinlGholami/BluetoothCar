;//HOSSEIN___GHOLAMI 9321043
;
;//LIBRARIS
;#include <mega64.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <alcd.h>
;#include <delay.h>
;
;//DEFENITIONS
;#define ME1 PORTB.3   // EN OF MOTOR 1 (LEFT)
;#define ME2 PORTB.2   //EN OF MOTOR 2 (RIGHT)
;#define SR1 OCR1CL    //SPEED (PWM DUTY CYCLE) OF M1 ROTATING FORWARD
;#define SL1 OCR1BL    //SPEED (PWM DUTY CYCLE) OF M1 ROTATING BACKWARD
;#define SR2 OCR1AL    //SPEED (PWM DUTY CYCLE) OF M2 ROTATING FORWARD
;#define SL2 OCR0      //SPEED (PWM DUTY CYCLE) OF M2 ROTATING BACKWARD
;
; int i=1; // USE AS COUNTER
; char data[]={'n','n','n','n','n','n','n','n'}; // USE AS BUFFER

	.DSEG
;  unsigned char D = 0x10;
;  unsigned char V = 0x50;
;// USART0 Receiver interrupt service routine
;interrupt [USART0_RXC] void usart0_rx_isr(void)
; 0000 0016 {  lcd_gotoxy(0,0);

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0017    data[i]=UDR0;    //daryaft data
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0018   i++;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0019   if(data[i]==data[i-1]){         //etminan az nabood data tekrari
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 001A     i--;}
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 001B   if(data[1]=='*'){               //etminan az gerftan data jadid
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 001C     i=1;}
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 001D                                                                  //daryaft kilid 1-9
; 0000 001E    switch(data[1]) {
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 001F                 case '1':
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0020                     lcd_putchar('1');
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0021                     i=1;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0022                   ME1=0; ME2=1;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0023                   SR1=0x00;SL1=0x00;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0024                   SR2=V+D;SL2=0x00;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0025                 break;
;PCODE: $00000044 VOL: 0
; 0000 0026                 case '2':
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0027                     lcd_putchar('2');
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0028                     i=1;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0029                   ME1=1; ME2=1;
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 002A                   SR1=V;SL1=0;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 002B                   SR2=V;SL2=0;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 002C                 break;
;PCODE: $00000058 VOL: 0
; 0000 002D                 case '3':
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 002E                     lcd_putchar('3');
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 002F                     i=1;
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0030                    ME1=1; ME2=0;
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 0031                   SR1=V+D;SL1=0x00;
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 0032                   SR2=0x00;SL2=0x00;
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 0033                break;
;PCODE: $0000006D VOL: 0
; 0000 0034                 case '4':
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 0035                     lcd_putchar('4');
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 0036                     i=1;
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 0037                   ME1=1; ME2=1;
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 0038                   SR1=V;SL1=0;
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 0039                   SR2=0;SL2=V;
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 003A                break;
;PCODE: $00000081 VOL: 0
; 0000 003B                 case '5':
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 003C                     lcd_putchar('5');
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 003D                     i=1;
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 003E                 break;
;PCODE: $00000089 VOL: 0
; 0000 003F                case '6':
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 0040                     lcd_putchar('6');
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 0041                     i=1;
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 0042                    ME1=1; ME2=1;
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 0043                   SR1=0;SL1=V;
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 0044                   SR2=V;SL2=0;
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 0045                break;
;PCODE: $0000009D VOL: 0
; 0000 0046                case '7':
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 0047                     lcd_putchar('7');
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 0048                     i=1;
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 0049                    ME1=0; ME2=1;
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 004A                   SR1=0x00;SL1=0x00;
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 004B                   SR2=0x00;SL2=V+D;
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0000 004C                break;
;PCODE: $000000B2 VOL: 0
; 0000 004D                case '8':
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0000 004E                     lcd_putchar('8');
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 004F                     i=1;
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
; 0000 0050                  ME1=1; ME2=1;
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0000 0051                   SR1=0;SL1=V;
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
; 0000 0052                   SR2=0;SL2=V;
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 0053                 break;
;PCODE: $000000C6 VOL: 0
; 0000 0054                case '9':
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0000 0055                     lcd_putchar('9');
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0000 0056                     i=1;
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
; 0000 0057                  ME1=1; ME2=0;
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0000 0058                   SR1=0x00;SL1=V+D;
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
; 0000 0059                   SR2=0x00;SL2=0x00;
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0000 005A                break;
;PCODE: $000000DB VOL: 0
; 0000 005B               default:
;PCODE: $000000DC VOL: 0
; 0000 005C                 break;  }
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0000 005D 
; 0000 005E    switch(data[3]) {                                             //daryaft clid channel
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
; 0000 005F                 case '+':
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
; 0000 0060                     lcd_putchar('D');
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
; 0000 0061                     lcd_putchar('+');
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
; 0000 0062                     i=1;data[3]='n' ;
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
; 0000 0063                     D++;
;PCODE: $000000ED VOL: 0
; 0000 0064                    if(D==255)D=254;
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
; 0000 0065                 break;
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
; 0000 0066                 case '-':
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
; 0000 0067                     lcd_putchar('c');
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
; 0000 0068                     lcd_putchar('-');
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
; 0000 0069                     i=1;data[3]='n';
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
; 0000 006A                     D--;
;PCODE: $00000101 VOL: 0
; 0000 006B                     if(D==0) D=1;
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
; 0000 006C                 break;
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
; 0000 006D               default:
;PCODE: $00000108 VOL: 0
; 0000 006E                 break;  }
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
; 0000 006F 
; 0000 0070    switch(data[4]) {                                                     // daryaft clid volom
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
; 0000 0071                 case '+':
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
; 0000 0072                     lcd_putchar('v');
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
; 0000 0073                     lcd_putchar('+');
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
; 0000 0074                     i=1;data[4]='n';data[3]='n';
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
; 0000 0075                     V++;
;PCODE: $0000011C VOL: 0
; 0000 0076                    if(V==255)V=254;
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
; 0000 0077                 break;
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
; 0000 0078                 case '-':
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
; 0000 0079                     lcd_putchar('v');
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
; 0000 007A                     lcd_putchar('-');
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
; 0000 007B                    i=1;data[4]='n';data[3]='n';
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
; 0000 007C                    V--;
;PCODE: $00000133 VOL: 0
; 0000 007D                    if(V==0)V=1;
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
; 0000 007E               default:
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
; 0000 007F                 break;  }
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
; 0000 0080 
; 0000 0081 
; 0000 0082     if(data[1]!='*'||data[4]!='+'||data[4]!='-'||data[3]!='+'||data[3]!='-') delay_ms(100);  //andaki vaghfe baraye nabo ...
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
; 0000 0083 
; 0000 0084   SR1=0;SR2=0;SL1=0;SL2=0;
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
; 0000 0085   ME1=0;ME2=0;
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
; 0000 0086 }
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;void main(void)
; 0000 0088 {
;PCODE: $00000165 VOL: 0
; 0000 0089 DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
; 0000 008A PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
; 0000 008B DDRB=(1<<DDB7) | (1<<DDB6) | (1<<DDB5) | (1<<DDB4) | (1<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
; 0000 008C PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
; 0000 008D DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
; 0000 008E PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
; 0000 008F DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
; 0000 0090 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
; 0000 0091 DDRE=(0<<DDE7) | (0<<DDE6) | (0<<DDE5) | (0<<DDE4) | (0<<DDE3) | (0<<DDE2) | (0<<DDE1) | (0<<DDE0);
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
; 0000 0092 PORTE=(0<<PORTE7) | (0<<PORTE6) | (0<<PORTE5) | (0<<PORTE4) | (0<<PORTE3) | (0<<PORTE2) | (0<<PORTE1) | (0<<PORTE0);
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
; 0000 0093 DDRF=(0<<DDF7) | (0<<DDF6) | (0<<DDF5) | (0<<DDF4) | (0<<DDF3) | (0<<DDF2) | (0<<DDF1) | (0<<DDF0);
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
; 0000 0094 PORTF=(0<<PORTF7) | (0<<PORTF6) | (0<<PORTF5) | (0<<PORTF4) | (0<<PORTF3) | (0<<PORTF2) | (0<<PORTF1) | (0<<PORTF0);
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
; 0000 0095 DDRG=(0<<DDG4) | (0<<DDG3) | (0<<DDG2) | (0<<DDG1) | (0<<DDG0);
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
; 0000 0096 PORTG=(0<<PORTG4) | (0<<PORTG3) | (0<<PORTG2) | (0<<PORTG1) | (0<<PORTG0);
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
; 0000 0097 
; 0000 0098 // Timer/Counter 0 initialization
; 0000 0099 ASSR=0<<AS0;
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
; 0000 009A TCCR0=(1<<WGM00) | (1<<COM01) | (0<<COM00) | (1<<WGM01) | (0<<CS02) | (1<<CS01) | (0<<CS00);
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
; 0000 009B TCNT0=0x00;
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
; 0000 009C OCR0=0x00;
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
; 0000 009D 
; 0000 009E // Timer/Counter 1 initialization
; 0000 009F TCCR1A=(1<<COM1A1) | (0<<COM1A0) | (1<<COM1B1) | (0<<COM1B0) | (1<<COM1C1) | (0<<COM1C0) | (0<<WGM11) | (1<<WGM10);
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
; 0000 00A0 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (1<<WGM12) | (0<<CS12) | (1<<CS11) | (0<<CS10);
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
; 0000 00A1 TCNT1H=0x00;
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
; 0000 00A2 TCNT1L=0x00;
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
; 0000 00A3 ICR1H=0x00;
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
; 0000 00A4 ICR1L=0x00;
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
; 0000 00A5 OCR1AH=0x00;
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
; 0000 00A6 OCR1AL=0x00;
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
; 0000 00A7 OCR1BH=0x00;
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
; 0000 00A8 OCR1BL=0x00;
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
; 0000 00A9 OCR1CH=0x00;
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
; 0000 00AA OCR1CL=0x00;
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
; 0000 00AB 
; 0000 00AC // Timer/Counter 2 initialization
; 0000 00AD // Clock source: System Clock
; 0000 00AE // Clock value: Timer2 Stopped
; 0000 00AF // Mode: Normal top=0xFF
; 0000 00B0 // OC2 output: Disconnected
; 0000 00B1 TCCR2=(0<<WGM20) | (0<<COM21) | (0<<COM20) | (0<<WGM21) | (0<<CS22) | (0<<CS21) | (0<<CS20);
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
; 0000 00B2 TCNT2=0x00;
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
; 0000 00B3 OCR2=0x00;
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
; 0000 00B4 
; 0000 00B5 // Timer/Counter 3 initialization
; 0000 00B6 // Clock source: System Clock
; 0000 00B7 // Clock value: Timer3 Stopped
; 0000 00B8 // Mode: Normal top=0xFFFF
; 0000 00B9 // OC3A output: Disconnected
; 0000 00BA // OC3B output: Disconnected
; 0000 00BB // OC3C output: Disconnected
; 0000 00BC // Noise Canceler: Off
; 0000 00BD // Input Capture on Falling Edge
; 0000 00BE // Timer3 Overflow Interrupt: Off
; 0000 00BF // Input Capture Interrupt: Off
; 0000 00C0 // Compare A Match Interrupt: Off
; 0000 00C1 // Compare B Match Interrupt: Off
; 0000 00C2 // Compare C Match Interrupt: Off
; 0000 00C3 TCCR3A=(0<<COM3A1) | (0<<COM3A0) | (0<<COM3B1) | (0<<COM3B0) | (0<<COM3C1) | (0<<COM3C0) | (0<<WGM31) | (0<<WGM30);
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
; 0000 00C4 TCCR3B=(0<<ICNC3) | (0<<ICES3) | (0<<WGM33) | (0<<WGM32) | (0<<CS32) | (0<<CS31) | (0<<CS30);
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
; 0000 00C5 TCNT3H=0x00;
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
; 0000 00C6 TCNT3L=0x00;
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
; 0000 00C7 ICR3H=0x00;
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
; 0000 00C8 ICR3L=0x00;
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
; 0000 00C9 OCR3AH=0x00;
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
; 0000 00CA OCR3AL=0x00;
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
; 0000 00CB OCR3BH=0x00;
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
; 0000 00CC OCR3BL=0x00;
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
; 0000 00CD OCR3CH=0x00;
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
; 0000 00CE OCR3CL=0x00;
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
; 0000 00CF 
; 0000 00D0 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 00D1 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
; 0000 00D2 ETIMSK=(0<<TICIE3) | (0<<OCIE3A) | (0<<OCIE3B) | (0<<TOIE3) | (0<<OCIE3C) | (0<<OCIE1C);
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
; 0000 00D3 
; 0000 00D4 // External Interrupt(s) initialization
; 0000 00D5 // INT0: Off
; 0000 00D6 // INT1: Off
; 0000 00D7 // INT2: Off
; 0000 00D8 // INT3: Off
; 0000 00D9 // INT4: Off
; 0000 00DA // INT5: Off
; 0000 00DB // INT6: Off
; 0000 00DC // INT7: Off
; 0000 00DD EICRA=(0<<ISC31) | (0<<ISC30) | (0<<ISC21) | (0<<ISC20) | (0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
; 0000 00DE EICRB=(0<<ISC71) | (0<<ISC70) | (0<<ISC61) | (0<<ISC60) | (0<<ISC51) | (0<<ISC50) | (0<<ISC41) | (0<<ISC40);
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
; 0000 00DF EIMSK=(0<<INT7) | (0<<INT6) | (0<<INT5) | (0<<INT4) | (0<<INT3) | (0<<INT2) | (0<<INT1) | (0<<INT0);
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
; 0000 00E0 
; 0000 00E1 // USART0 initialization
; 0000 00E2 // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 00E3 // USART0 Receiver: On
; 0000 00E4 // USART0 Transmitter: Off
; 0000 00E5 // USART0 Mode: Asynchronous
; 0000 00E6 // USART0 Baud Rate: 9600
; 0000 00E7 UCSR0A=(0<<RXC0) | (0<<TXC0) | (0<<UDRE0) | (0<<FE0) | (0<<DOR0) | (0<<UPE0) | (0<<U2X0) | (0<<MPCM0);
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
; 0000 00E8 UCSR0B=(1<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (1<<RXEN0) | (0<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
; 0000 00E9 UCSR0C=(0<<UMSEL0) | (0<<UPM01) | (0<<UPM00) | (0<<USBS0) | (1<<UCSZ01) | (1<<UCSZ00) | (0<<UCPOL0);
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
; 0000 00EA UBRR0H=0x00;
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
; 0000 00EB UBRR0L=0x33;
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
; 0000 00EC 
; 0000 00ED // USART1 initialization
; 0000 00EE // USART1 disabled
; 0000 00EF UCSR1B=(0<<RXCIE1) | (0<<TXCIE1) | (0<<UDRIE1) | (0<<RXEN1) | (0<<TXEN1) | (0<<UCSZ12) | (0<<RXB81) | (0<<TXB81);
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
; 0000 00F0 
; 0000 00F1 // Analog Comparator initialization
; 0000 00F2 // Analog Comparator: Off
; 0000 00F3 // The Analog Comparator's positive input is
; 0000 00F4 // connected to the AIN0 pin
; 0000 00F5 // The Analog Comparator's negative input is
; 0000 00F6 // connected to the AIN1 pin
; 0000 00F7 ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
; 0000 00F8 SFIOR=(0<<ACME);
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
; 0000 00F9 
; 0000 00FA // ADC initialization
; 0000 00FB // ADC disabled
; 0000 00FC ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADFR) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
; 0000 00FD 
; 0000 00FE // SPI initialization
; 0000 00FF // SPI disabled
; 0000 0100 SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
; 0000 0101 
; 0000 0102 // TWI initialization
; 0000 0103 // TWI disabled
; 0000 0104 TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
; 0000 0105 
; 0000 0106 // Alphanumeric LCD initialization
; 0000 0107 // Connections are specified in the
; 0000 0108 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 0109 // RS - PORTA Bit 0
; 0000 010A // RD - PORTA Bit 1
; 0000 010B // EN - PORTA Bit 2
; 0000 010C // D4 - PORTA Bit 4
; 0000 010D // D5 - PORTA Bit 5
; 0000 010E // D6 - PORTA Bit 6
; 0000 010F // D7 - PORTA Bit 7
; 0000 0110 // Characters/line: 8
; 0000 0111 lcd_init(20);
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
; 0000 0112 
; 0000 0113 // Global enable interrupts
; 0000 0114 #asm("sei")
;PCODE: $000001E2 VOL: 0
	sei
;PCODE: $000001E3 VOL: 0
; 0000 0115 
; 0000 0116 while (1)
;PCODE: $000001E4 VOL: 0
; 0000 0117 { delay_ms(100);
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
; 0000 0118   }
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
; 0000 0119 }
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
